package cool.compiler;
public interface ASTVisitor<T> {
    T visit(Prog prog);
    T visit(ClassDef classDef);
    T visit(VarDef varDef);
    T visit(Int anInt);
    T visit(FuncDef funcDef);
    T visit(Formal formal);
    T visit(Bool bool);
    T visit(Text text);
    T visit(Id id);
    T visit(Mult mult);
    T visit(Div div);
    T visit(Minus minus);
    T visit(Plus plus);
    T visit(Paren paren);
    T visit(Negation negation);
    T visit(Lt lt);
    T visit(Le le);
    T visit(Equal equal);
    T visit(Not not);
    T visit(Assign assign);
    T visit(IsVoid isVoid);
    T visit(New aNew);
    T visit(ImplicitDispatch implicitDispatch);
    T visit(ExplicitDispatch explicitDispatch);
    T visit(If anIf);
    T visit(While aWhile);
    T visit(Let let);
    T visit(LetDefinition letDefinition);
    T visit(Case aCase);
    T visit(Block block);
}
